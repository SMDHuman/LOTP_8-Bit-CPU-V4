0: NOP
1: LDA [DATA]         - Load next value of program EEPROM to A register
2: LAP [ADDRESS]      - Take next value as pointer and load data from program EEPROM to A register
3: STA [ADDRESS]      - Take next value as pointer and Store data from A register to program EEPROM
4: LDB [DATA]         - Load next value of program EEPROM to B register
5: CAL [CALCULATION]	- Make a calculation between A and B register and store to A register 
6: JMP [ADDRESS]			- Jump immediate
7: JOF [ADDRESS]			- Jump if overflow
8: JEZ [ADDRESS]			- Jump if equal zero 
9: PSH								- Push data from A register to FILO stack
A: POP								- Pop data from FILO stack and write A register
B: INP								- Read data from input and write A register
C: OUT								- Read data from A register and write output
D: 
E:
F: HLT								- Stops clock ticking


                       bus
      +------------+ 8 ||| 8 +----------------+
      |instruction |<=>|||<=>|   A register   |
      |register    |   |||   +----------------+       
      +------------+   ||| 4 +-----------+  ||
              ||8      |||==>|calculation|  ||
              \/       |||   | register  |  ||8
       <-+---------+   |||   +-----------+  ||
       <-|microcode|   |||         ||4      ||
       <-|EEPROM   |   |||         \/       \/
       <-+---------+   ||| 8 +----------------+
              /\       |||<==|       ALU      |
              ||8      |||   +----------------+
  +-----+  +-------+ 8 |||        /\     
  |clock|--|address|<=>|||        ||8    
  +-----+  |counter|   ||| 8 +----------+          
           +-------+   |||==>|B register|         
          +--------+ 8 |||   +----------+         
          |address |<==||| 8 +--------+ 8+-------+                    
          |register|   |||<=>| stack  |<=| stack |                         
          +--------+   |||   | EEPROM |  |counter|
              ||8      |||   +--------+  +-------+
              \/       ||| 8 +---------------+       
          +--------+ 8 |||<==|input register |<== = =
          |program |==>|||   +---------------+<-- - -   
          | EEPROM |   ||| 8 +---------------+      
          +--------+   |||==>|output register|== = >   
                       |||   +---------------+-- - >   
                       |||
                       |||
                       |||



Microcode Page Flags:
	ALU:
		-Overflow
		-Output Zero

Microcode Flags:
	Clock : 
		-Halt 
	Address Counter: 
		-Count up
	Stack Counter:
		-Count Up
		-Count Down

	Writes:
		0: - - -
		1: Address Counter
		2: Address Register
		3: Program EEPROM
		4: Instruction Register
		5: A Register
		6: B Register
		7: Calculation Register
		8: Output Register
		9: Stack EEPROM
		A: - - -
		B: - - -
		C: - - -
		D: - - -
		E: - - -
		F: - - -
	Reads:
		0: - - -
		1: Address Counter
		2: Program EEPROM
		3: Instruction Register
		4: A Register
		5: Input Register
		6: Stack EEPROM
		7: ALU
		8: - - -
		9: - - -
		A: - - -
		B: - - -
		C: - - -
		D: - - -
		E: - - -
		F: - - -



Calculations:
	0x0 - ADD / 0x4 - AND / 0x8 - SUB / 0xC - NAN 
	0x1 - INC / 0x5 - ORG / 0x9 - DEC / 0xD - NOR
	0x2 - SFH / 0x6 - XOR / 0xA - SFL / 0xE - XNR
	0x3 - A2A / 0x7 - B2A / 0xB - ANT / 0xF - BNT
